service: zip-utils-backend

plugins:
  - serverless-offline

custom:
  env:
    local: 'local'
    dev: 'dev'
    prod: 'prod'

  config: ${file(env/${sls:stage}-${self:provider.region}.yml)}

  serverless-offline:
    httpPort: 4000
    noPrependStageInUrl: true
    prefix: ${sls:stage}
    noAuth: true

  urlsTableName: ziputils-zipurl-${sls:stage}-urls-table

provider:
  name: aws
  runtime: nodejs20.x
  apiGateway:
    minimumCompressionSize: 1024
    metrics: false
  stage: ${opt:stage, 'local'}
  region: ap-south-1
  endpointType: REGIONAL
  timeout: 30
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:PutItem
            - dynamodb:GetItem
          Resource:
            - arn:aws:dynamodb:${self:provider.region}:*:table/${self:custom.urlsTableName}
  environment:
    NODE_ENV: ${sls:stage}
    IS_PRODUCTION: ${self:custom.config.IS_PRODUCTION}
    FRONTEND_DOMAIN: ${self:custom.config.FRONTEND_DOMAIN}

functions:
  graphql:
    handler: src/handler.graphqlHandler
    events:
      - http:
          path: /graphql
          method: POST
          cors:
            origin: ${self:custom.config.FRONTEND_DOMAIN}
            headers:
              - Content-Type
              - Authorization
            allowCredentials: false
    environment:
      URLS_TABLE_NAME: ${self:custom.urlsTableName}

resources:
  Resources:
    # ✅ DynamoDB Table
    urlsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.urlsTableName}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST

    # ✅ WAF WebACL with Origin Restriction + Rate Limit
    ZipUtilsWebACL:
      Type: AWS::WAFv2::WebACL
      Properties:
        Name: ziputils-web-acl
        Scope: REGIONAL
        DefaultAction:
          Allow: {} # Allow all by default, rules will block unwanted traffic
        VisibilityConfig:
          CloudWatchMetricsEnabled: true
          MetricName: ziputilsWebACL
          SampledRequestsEnabled: true
        Rules:
          # ✅ Block if Origin is not ziputils.com
          - Name: BlockInvalidOrigin
            Priority: 1
            Action:
              Block: {}
            Statement:
              NotStatement:
                Statement:
                  ByteMatchStatement:
                    SearchString: ${self:custom.config.FRONTEND_DOMAIN}
                    FieldToMatch:
                      SingleHeader:
                        Name: 'origin'
                    TextTransformations:
                      - Priority: 0
                        Type: 'LOWERCASE'
                    PositionalConstraint: EXACTLY
            VisibilityConfig:
              CloudWatchMetricsEnabled: true
              MetricName: blockInvalidOrigin
              SampledRequestsEnabled: true

          # ✅ Rate Limit for ziputils.com origin
          - Name: RateLimitZiputils
            Priority: 2
            Action:
              Block: {}
            Statement:
              RateBasedStatement:
                Limit: 100 # 10 requests in 5 minutes
                AggregateKeyType: IP
                ScopeDownStatement:
                  ByteMatchStatement:
                    SearchString: ${self:custom.config.FRONTEND_DOMAIN}
                    FieldToMatch:
                      SingleHeader:
                        Name: 'origin'
                    TextTransformations:
                      - Priority: 0
                        Type: 'LOWERCASE'
                    PositionalConstraint: EXACTLY
            VisibilityConfig:
              CloudWatchMetricsEnabled: true
              MetricName: rateLimitZiputils
              SampledRequestsEnabled: true

    # ✅ Associate WAF with API Gateway Stage
    WAFWebACLAssociation:
      Type: AWS::WAFv2::WebACLAssociation
      Properties:
        ResourceArn: !Sub arn:aws:apigateway:${AWS::Region}::/restapis/${ApiGatewayRestApi}/stages/${self:provider.stage}
        WebACLArn: !GetAtt ZipUtilsWebACL.Arn
